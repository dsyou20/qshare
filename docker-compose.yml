version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qshare
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - qshare-network
    deploy:
      resources:
        limits:
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  app:
    build:
      context: ./next-nest-app
      dockerfile: Dockerfile
    ports:
      - "16001:3001" # API
      - "16002:5555" # PRISIMA
      - "16003:3000" # ì›¹
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qshare
      - FRONTEND_URL=http://ect2.iptime.org:16003
    volumes:
      - type: bind
        source: ./next-nest-app
        target: /app
    deploy:
      resources:
        limits:
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "cd backend && npm pkg set dependencies.@nestjs/swagger='^7.3.0' dependencies.@nestjs/mapped-types='^2.0.5' dependencies.typeorm='^0.3.20' && cd .. && npm install && cd backend && npx prisma generate && npx prisma db push --accept-data-loss && cd .. && npm run build && cd frontend && npm run start & cd backend && npm run start:prod"
    depends_on:
      - postgres
    networks:
      - qshare-network

volumes:
  postgres_data:


networks:
  qshare-network:
    driver: bridge
